// файл с TODO
// который тут всего один, но под ним написано что нужно делать
// ниже идут ссылки с описаниями, может быть когда-нибудь пригодятся для проекта



/*		вернуть чат обратно. усовершенствовать
		https://msdn.microsoft.com/ru-ru/library/dd335942.aspx
		пример сервера взять оттуда

		http://person.at.ua/publ/programmirovanie/s/rabota_s_soketami_v_net_i_c_sozdanie_chata/4-1-0-61
		http://www.cyberforum.ru/csharp-beginners/thread667326.html
		https://msdn.microsoft.com/ru-ru/library/bew39x2a.aspx !! возможно этот лучше
*/


// TODO основной список тодошек в этом файле

// разделить данные и слои. У слоёв и редактора появляются новые методы - получить ссылку на словарь с данными, ссылку на слой по имени, вывод фоновых данных с учётом масштаба

// сделать компонент строка, который будет уметь выводить информацию цветными строками и c помощью биндинга получать текущие значения
// и определять свои размеры
// и компонент текст, содержащий строки и который может быть будет уметь переводить текст между строками и контролировать свою ширину
// и надо посмотреть как биндинг сделан - что и как нужно вызывать что бы обновить текст в строке

// сделать TrackBar - при перемещении ползунка менять переменную в процентах от заданного значения (для скролбара нужно будет)
// потом на его основе сделать компонент (скорее всего Panel) - который при добавлении объектов будет пересчитывать свою область и выводить скролбар

// расширяемый компонент для больших чисел, может быть можно попробовать найти такой класс уже готовый

// разобраться с SendError. вставить SendError например в загрузку текстур, желательно видеть сообщения об ошибках

// модальное окно для ввода строки - надо переделать механизм паузы при нажатии

// переделать application run - вначале узнаём тип приложения и в зависимости от типа обрабатываем создание компонентов

// drawtotexture пока непонятно - текущий механизм сохраняет объекты и имена текстур и часто их обновляет, но может быть их не надо так часто обновлять, во вторых нужна возможность удалить их оттуда

// Binding - посмотреть как можно использовать этот механизм, насколько он универсален и сделать Label с возможностью простого вывода отслеживаемой переменной

// input - там есть keyboard clear - если оно не будет использоваться, то надо будет удалить - теперь есть более действенные способы прекратить обработку клавиши

// в controllerEvent остаётся стековая система

// усовершенствовать модули, что бы их можно было запускать несколько одновременно - сделать демку, в которой можно выбирать запускаемые модули и запускать их. но наверно по одному

// добавить в программу настройки для коннекта с сервером, как основное окно для ввода логина и пароля пользователя. 
// или сделать это в движке - он будет коннектиться только после определённой команды

// переделать визуальные компоненты для слоёв. сделать вид слоя, который может отключать свою прорисовку (рисовать отрендеренную ранее текстуру). все слои определяются как иерархии, но внутри слоя может быть объект визуализации
// модальный слой автоматически должен блокировать распространение событий клавиатуры и мыши
// события клавиатуры и мыши переопределить - будет событие нажатия и отпускания (с координатами, для клавиатуры и для мыши) (но это в теории)

//но желательно сервер сначала доделать

//  совершенствуем настройщик
// отдельный visualizationProvider на основе формы который умеет выполнять некоторые команды - показывать когда кто приконнектился, логи и т.п.
// отдельный проект для сервера
// текущий основной проект должен уметь переключаться между режимами клиент и клиент с встроенным сервером

// проверить механизм отправки/получения событий между моделью и видом - возможно события требуют дополнительной обработки, которая сейчас отсутствует
// GMTubesVictoryCloseModal сейчас ничего не делает, нужно задать ему выход в меню

// событие для смены фона. нужен системный объект (sys тоже можно сделать системным, что бы каждый модуль не создавал его, а создавал свой и присоединял его к существующим)
// и которые будут отрабатывать смену фона и т.п. стандартные вещи
// на GMTubes отработать разделение на клиент-сервер

// можно попробовать вернуться обратно к слоям визуализации, усовершенствовав их иерархией. 
//то что сейчас - это объектная иерархия, т.е. не связанная с визуализацией. а слои можно будет делать "дырявыми" для пропускания 
//события дальше и т.п. - и это отделит передачу событий от самих объектов, обрабатывающих событие

// сделать больше опций для добавления событий, как минимум добавить в начало списка и добавить до или перед конкретным списком (хотя делегаты вроде этого не позволяют)

// переделать структуру классов. а то использовать dragabble как то не круто, а обработки компонентов нету у остальных классов, а в "систему" не передают родителя
// и почему контрол не умеет передавать события своим компонентам - надо разобраться

// Может быть можно будет сделать разделение - компоненты и т.п. получают события по цепочке вызовов, 
// а отдельный компонент - почти обычный viewObject будет передавать нужные события основному объекту из компонентов

// Может быть придётся сделать автономные события, они как раз подходят под MVC - объект получает контроллер и записывает себя или свою функцию
// в контроллере. Где то создаётся объект-событие, который получает параметры события, подписывается на событие и может запустить событие 
// у всех подписанных на событие объектов

// напоминает паттерн посетитель или action. второй вроде лучше

// по возможности со временем перейти на ApplicationSettings http://msdn.microsoft.com/ru-ru/library/ms171565.aspx




// а это уже идут ссылки

//http://stackoverflow.com/questions/7323229/glblendfunc-and-alpha-blending

//но боюсь там тоже не то, просто observer
//http://msdn.microsoft.com/en-us/library/ee850490.aspx
//а тут может быть полезнее
//http://msdn.microsoft.com/en-us/library/awbftdfh.aspx
//вот тут похоже на то что нужно
//http://msdn.microsoft.com/en-us/library/z4ka55h8.aspx
//а тут понятный пример вариантности и ковариантности (но от ковариантности делегатов отказались в 4.5)
//http://msdn.microsoft.com/en-us/library/ms173174.aspx
//не совсем то что нужно, но всё таки 
//http://msdn.microsoft.com/en-us/library/aa970850(v=vs.110).aspx
//на всякий случай 
//http://geekswithblogs.net/BlackRabbitCoder/archive/2011/11/17/c.net-little-wonders-the-eventhandler-and-eventhandlerteventargs-delegates.aspx

// работа с сетью
// https://msdn.microsoft.com/en-us/library/w89fhyex(v=vs.110).aspx

// пример кода пинга 
// https://msdn.microsoft.com/ru-ru/library/system.net.networkinformation.ping(v=vs.110).aspx

// обзор платежных агрегаторов - может быть пригодится
// http://habrahabr.ru/company/web_payment_ru/blog/265349/